part of 'club_profile_cubit.dart';

@Freezed(makeCollectionsUnmodifiable: false)
class ClubProfileState with _$ClubProfileState {
  const factory ClubProfileState({
    required bool isLoading,
    required bool isFailed,
    required bool isSuccessful,
    required bool showHamburger,
    required String responseMsg,
    required bool isAtTabTop,
    required GlobalKey key,
    required int clubId,
    required double viewPortHeight,
    required int currentImageIndex,
    required ScrollController scrollController,
    required ScrollController parentController,
    required TabController? tabController,
    required PageController caraouselController,
    String? todayOpeningTime,
    String? todayClosingTime,
    required bool isAtTop,
    required bool isOpenNow,
    required String apiBaseUrl,
    required PubRepository pubRepository,
    required List<String> images,
    required int page,
    required bool isMuted,
    required DraggableScrollableController dragController,
    required List<AssetDto> assets,
    required List<AssetDto> highlights,
    required List<AssetDto> assetToDisplay,
    PubDto? pub,
    required UserRepository userRepository,
    required bool isFollowing,
    required bool isBlocked,
    required bool openPhotoViewer,
    required bool showHeader,
  }) = _ClubProfileState;

  factory ClubProfileState.initial(
          {required int clubId, required String apiBaseUrl}) =>
      ClubProfileState(
        key: GlobalKey(),
        isOpenNow: false,
        caraouselController:PageController(),
        tabController: null,
        viewPortHeight: 274,
        isAtTabTop: false,
        dragController: DraggableScrollableController(),
        showHeader: false,
        isMuted: false,
        currentImageIndex: 0,
        scrollController: ScrollController(),
        parentController: ScrollController(),
        apiBaseUrl: apiBaseUrl,
        isAtTop: false,
        images: [],
        assetToDisplay: [],
        showHamburger: true,
        clubId: clubId,
        isBlocked: false,
        userRepository: IUserRepository(serverUrl: apiBaseUrl),
        pubRepository: IPubRepository(serverUrl: apiBaseUrl),
        isLoading: false,
        isFailed: false,
        isSuccessful: false,
        responseMsg: '',
        isFollowing: false,
        page: 1,
        assets: [],
        highlights: [],
        openPhotoViewer: false,
      );
}
