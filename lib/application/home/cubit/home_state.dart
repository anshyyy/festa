part of 'home_cubit.dart';

@Freezed(makeCollectionsUnmodifiable: false)
class HomeState with _$HomeState {
  const factory HomeState({
    required bool isLoading,
    required bool hasMoreEvents,
    required bool isSuccessful,
    required bool isFailed,
    required bool isAtTop,
    required bool noUse,
    required bool showSearchOnPick,
    FilterDto? categoryFilter,
    required int page,
    required bool noEventsInTheLocation,
    required List<EventDto> events,
    required List<EventDto> cachedEvents,
    required List<FilterDto> filters,
    required List<Map<String, dynamic>> exploreList,
    required List<Map<String, dynamic>> mainExploreList,
    required List<Map<String, dynamic>> staticFilterList,
    required PageController pageController,
    required bool showLocationDialog,
    required List<Map<String, dynamic>> filterOptions,
    required List<Map<String, dynamic>> locationSuggestions,
    required LocationDto location,
    required EventRepository eventRepository,
    required ScrollController scrollController,
    required String sortDisplayName,
    required bool sortDropdownOpen,
    required GlobalKey sortKey,
    required Offset chipPosition,
    OverlayEntry? overlayEntry,
    required bool isSearchOpen,
    required bool isRefresh,
    required bool isSearchChanged,
    required bool isLocationSearchChanged,
    required bool showPermissionDialog,
    required bool noFilteredEvents,
    required bool noLocatedEvents,
    required bool isScrollingUp,
    required bool isVideoMute,
    required bool isTodayFilterApplied,
    required bool isThisWeekendFilterApplied,
    required bool isSpecificDateFilterApplied,
    required LocationRepository locationRepository,
    required List<SuggestionDto> suggestions,
    required TextEditingController searchController,
    required AppStateNotifier appStateNotifier,
    required ISearchRepository searchRepository,
    required GlobalKey homeKey,
    required LocationStorageService locationStorage,
    required List<DateTime> selectedDates,
    UserDto? user,
    SearchResults? searchResults,
    required bool searchLoading,
  }) = _HomeState;

  factory HomeState.initial(
          {required AppStateNotifier appStateNotifier,
          required String serverUrl,
          required String mapsApiKey}) =>
      HomeState(
        page: 1,
        selectedDates: [],
        cachedEvents: [],
        isRefresh: false,
        showPermissionDialog: false,
        noEventsInTheLocation: false,
        isTodayFilterApplied: false,
        isSpecificDateFilterApplied: false,
        isThisWeekendFilterApplied: false,
        homeKey: GlobalKey(),
        locationStorage: LocationStorageService(),
        noUse: false,
        hasMoreEvents: true,
        isScrollingUp: false,
        searchController: TextEditingController(),
        scrollController: ScrollController(
          keepScrollOffset: true,
        ),
        searchRepository: ISearchRepository(serverUrl: serverUrl),
        filters: [],
        user: appStateNotifier.user,
        events: [],
        eventRepository: IEventRepository(
          serverUrl: serverUrl,
        ),
        isLoading: true,
        isFailed: false,
        showSearchOnPick: false,
        isAtTop: true,
        isSuccessful: false,
        location: appStateNotifier.location ?? OtherConstants.defaultLocation,
        pageController: PageController(),
        mainExploreList: [
          {
            'id': 'filter',
            'isSelected': false,
            'identifier': AppConstants.filterKey,
            'svgIcon': AssetConstants.filterIcon,
            'label': 'Filter',
          },
          {
            'id': 'sort',
            'isSelected': false,
            'identifier': AppConstants.otherKey,
            'svgIcon': AssetConstants.arrowDown,
            'label': 'Sort',
          },
          {
            'id': 'today',
            'isSelected': false,
            'identifier': null,
            'svgIcon': null,
            'label': 'Today',
          },
          {
            'id': 'weekend',
            'isSelected': false,
            'identifier': null,
            'svgIcon': null,
            'label': 'This Weekend',
          },
          {
            'id': 'date',
            'isSelected': false,
            'identifier': null,
            'svgIcon': null,
            'label': 'Date',
          },
        ],
        exploreList: [
          {
            'id': 'filter',
            'isSelected': false,
            'identifier': AppConstants.filterKey,
            'svgIcon': AssetConstants.filterIcon,
            'label': 'Filter',
          },
          {
            'id': 'sort',
            'isSelected': false,
            'identifier': AppConstants.otherKey,
            'svgIcon': AssetConstants.arrowDown,
            'label': 'Sort',
          },
          {
            'id': 'today',
            'isSelected': false,
            'identifier': null,
            'svgIcon': null,
            'label': 'Today',
          },
          {
            'id': 'weekend',
            'isSelected': false,
            'identifier': null,
            'svgIcon': null,
            'label': 'This Weekend',
          },
          {
            'id': 'date',
            'isSelected': false,
            'identifier': null,
            'svgIcon': null,
            'label': 'Date',
          },

        ],
        staticFilterList: [
          {
            'id': 'filter',
            'isSelected': false,
            'identifier': AppConstants.filterKey,
            'svgIcon': AssetConstants.filterIcon,
            'label': 'Filter',
          },
          {
            'id': 'sort',
            'isSelected': false,
            'identifier': AppConstants.otherKey,
            'svgIcon': AssetConstants.arrowDown,
            'label': 'Sort',
          },
          {
            'id': 'today',
            'isSelected': false,
            'identifier': null,
            'svgIcon': null,
            'label': 'Today',
          },
          {
            'id': 'weekend',
            'isSelected': false,
            'identifier': null,
            'svgIcon': null,
            'label': 'This Weekend',
          },
          {
            'id': 'date',
            'isSelected': false,
            'identifier': null,
            'svgIcon': null,
            'label': 'Date',
          },
          {
            'id': 'like',
            'isSelected': false,
            'identifier': null,
            'svgIcon': AssetConstants.heartOutlinedIcon,
            'label': "",
          },
        ],
        showLocationDialog: false,
        filterOptions: [],
        locationSuggestions: [
          {
            'name': 'Mumbai',
            'image':
                'https://images.unsplash.com/photo-1529253355930-ddbe423a2ac7?q=80&w=2665&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',
          },
          {
            'name': 'Delhi',
            'image':
                'https://images.unsplash.com/photo-1587474260584-136574528ed5?q=80&w=2940&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',
          },
          {
            'name': 'Bangalore',
            'image':
                'https://images.unsplash.com/photo-1637540485660-93031d90b97b?q=80&w=2874&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',
          },
          {
            'name': 'Japan',
            'image':
                'https://images.unsplash.com/photo-1544808208-727498b3df07?q=80&w=2940&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',
          },
          {
            'name': 'Up',
            'image':
                'https://images.unsplash.com/photo-1701749740828-c068fa546d3e?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',
          },
        ],
        sortDisplayName: 'Sort',
        sortDropdownOpen: false,
        isVideoMute: true,
        sortKey: GlobalKey(),
        chipPosition: Offset.zero,
        isSearchOpen: false,
        isSearchChanged: false,
        isLocationSearchChanged: false,
        noFilteredEvents: false,
        noLocatedEvents: false,
        searchLoading: false,
        locationRepository: ILocationRepository(
          mapsApiKey: mapsApiKey,
        ),
        suggestions: [],
        appStateNotifier: appStateNotifier,
      );
}
